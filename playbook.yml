---
- hosts: all
  user: root 
  sudo: true
  tasks:
 
  - name: install misc packages
    apt: name={{ item }} state=latest update_cache=true
    with_items:
      - git
      - curl
      - unzip
      - vim
      - fail2ban

  - name: download wp-cli
    sudo: yes
    get_url: url=https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar dest=/usr/local/bin/wp

  - name: update permissions of wp-cli to allow anyone to execute it (should be only for local install!)
    file: path=/usr/local/bin/wp mode="0755"

  - name: download WordPress filter
    sudo: yes
    get_url: url=http://plugins.svn.wordpress.org/wp-fail2ban/trunk/wordpress.conf dest=/etc/fail2ban/filter.d

  - replace: dest=/etc/fail2ban/jail.conf regexp='ignoreip = 127.0.0.1/8$' replace='ignoreip = 127.0.0.1/8 83.241.140.40 mail.idkommunikation.com'

  - name: add WordPress section
    lineinfile: dest=/etc/fail2ban/jail.d/wordpress.conf line='[wordpress]' create=yes

  - name: add maxrety settings
    lineinfile: dest=/etc/fail2ban/jail.d/wordpress.conf regexp='^enabled = ' line='enabled = true' create=yes

  - name: add filter settings
    lineinfile: dest=/etc/fail2ban/jail.d/wordpress.conf regexp='^filter = ' line='filter = wordpress' create=yes

  - name: add bantime settings
    lineinfile: dest=/etc/fail2ban/jail.d/wordpress.conf regexp='^logpath = ' line='logpath = /var/log/auth.log' create=yes
 
  - name: add port settings
    lineinfile: dest=/etc/fail2ban/jail.d/wordpress.conf regexp='^port = ' line='port = http,https' create=yes

  - name: add maxretry settings
    lineinfile: dest=/etc/fail2ban/jail.d/wordpress.conf regexp='^maxretry = ' line='maxretry = 3' create=yes

  - name: add findtime settings
    lineinfile: dest=/etc/fail2ban/jail.d/wordpress.conf regexp='^findtime = ' line='findtime = 10800' create=yes

  - name: add bantime settings
    lineinfile: dest=/etc/fail2ban/jail.d/wordpress.conf regexp='^bantime = ' line='bantime = 86400' create=yes

  - service: name=fail2ban state=reloaded

  - name: create directory
    file: path=/var/www state=directory owner=root group=root mode=0755

  - name: install nginx server
    apt: pkg=nginx state=installed
  
  - name: upload file index.html file
    copy: src=templates/index.html dest=/var/www/ mode=0644

  - name: upload firewall rule file
    copy: src=templates/00-firewall dest=/etc/network/if-pre-up.d/ mode=0755

  - name: execute the firewall rule
    command: sh /etc/network/if-pre-up.d/00-firewall
 
#  handlers:
#    - name: start nginx
#      service: name=nginx state=started

  - name: install MySQL
    apt: name={{ item }} state=latest
    with_items:
      - python-mysqldb
      - mysql-server
      - mysql-client

#  - name: start MySQL
#    service: name=mysql state=started

#  - name: add MySQL user
#    mysql_user: name=dummy
#                host={{ item }}
#                password=dummy priv=*.*:ALL,GRANT
    
#    with_items:
#      - '%'
#      - localhost

  - name: create MySQL database
    mysql_db: name={{ item }}
              state=present
    with_items:
      - dummy_db
    
  - name: create MySQL root password
    command: /usr/bin/openssl rand -base64 16
    register: mysql_root_pass

  - name: update MySQL root passwd
    mysql_user: name=root host={{ item }} password={{ mysql_root_pass.stdout }}
    with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost

  - name: copy .my.cnf file with root password credentials
    template: src=templates/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600

  - name: delete anonymous MySQL server user for localhost
    mysql_user: name="" state=absent

  - name: remove the MySQL test database
    mysql_db: name=test state=absent 

  - name: ensure MySQL will listen on all ip interfaces (bind to 0.0.0.0)
    lineinfile: dest=/etc/mysql/my.cnf regexp='bind-address\s*=\s*127\.0\.0\.1\s*' line='bind-address            = 0.0.0.0' state=present backrefs=yes

  - service: name=mysql state=reloaded

  - name: install php5 ppa
    apt_repository: repo='ppa:ondrej/php5'

  - name: install php packages
    apt: name={{ item }}
    with_items:
      - php5
      - php5-cli
      - php5-fpm

  - replace: dest=/etc/php5/fpm/pool.d/www.conf regexp='listen = /var/run/php5-fpm.sock' replace='listen = 127.0.0.1:9000'

  - service: name=php5-fpm state=reloaded

  - name: install composer
    shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin creates=/usr/local/bin/composer
    tags: composer

  - name: rename composer.phar to composer
    shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer creates=/usr/local/bin/composer
    tags: composer

  - name: make composer executable
    file: path=/usr/local/bin/composer mode=a+x state=file
    tags: composer
